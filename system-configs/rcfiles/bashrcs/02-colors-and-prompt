#!/bin/bash

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

force_color_prompt=yes
if [ -n "$force_color_prompt" ]; then
  if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
    color_prompt=yes
  else
    color_prompt=
  fi
fi

if [ "$color_prompt" = yes ]; then
  ### git-prompt
  function __git_ps1() { 
    if type git &> /dev/null; then
      if git rev-parse --is-inside-work-tree &>/dev/null; then
        echo " ($(git rev-parse --abbrev-ref HEAD))"
      fi 
    fi
  }
  # TODO - Is this the thing that's locking?
  #if [ -e ~/.git-prompt.sh ]; then
  #  # shellcheck disable=SC1090
  #  source ~/.git-prompt.sh
  #fi
  #PS1='\[\033[0;33m\]\u\[\033[0m\]@\[\033[0;32m\]\h\[\033[0m\]:\[\033[0;34m\]\W\[\033[0m\]\$ '
  PS1='\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\W\[\033[00m\]\[\e[1;30m\]$(__git_ps1)\[\e[1;33m\]\$ \[\e[0m\]'
  

else
  PS1='$\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

OS="$(uname -s)"
if [[ -x /usr/bin/dircolors ]]; then
  alias ls='ls --color=auto'
  alias ll='ls -l --color=auto'
  alias dir='dir --color=auto'
  alias vdir='vdir --color=auto'

  alias grep='grep --color=auto'
  alias fgrep='fgrep --color=auto'
  alias egrep='egrep --color=auto'
elif [[ $OS == "Darwin" ]]; then
  alias ls='ls -G'
  alias ll='ls -l -G'

  alias grep='grep --color=auto'
  alias fgrep='fgrep --color=auto'
  alias egrep='egrep --color=auto'
else
  alias ll='ls -lF'
fi

# colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

